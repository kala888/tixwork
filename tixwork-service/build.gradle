buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://mirrors.huaweicloud.com/repository/maven/"
        }
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group 'com.tiandtech'
    version '0.0.2'

    repositories {
        mavenLocal()
        maven { url "https://mirrors.huaweicloud.com/repository/maven/" }
        mavenCentral()
    }
}

subprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"
    apply plugin: "java"
    apply plugin: "java-library"


    jar {
        enabled = true
    }

    springBoot {
        buildInfo()
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    // gradle -Pprod bR 启动prod
    // gradle -Pprod bJ 用prod 替换application中的 #spring.profiles.active#
    def profiles ="dev"
    if(project.hasProperty("prod")) {
        profiles = "prod"
    }
    if(project.hasProperty("profile")){
        profiles = project.getProperty("profile")
    }

    bootRun {
        args = ["--spring.profiles.active=" + profiles]
        // logback 有些JVM下JXSAXParserFactory的错误，Caused by: javax.xml.parsers.ParserConfigurationException: SAX feature 'http://xml.org/sax/features/external-general-entities' not supported
        // 详情看某个https://logback.qos.ch/codes.html
        jvmArgs "-Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl"
    }

    processResources {
        inputs.property('version', version)
        inputs.property('springProfiles', profiles)
        filesMatching("**/application.yml") {
            filter {
                it.replace("#project.version#", version)
            }
            filter {
                it.replace("#spring.profiles.active#", profiles)
            }
        }
    }

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
        implementation platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")

        implementation "cn.hutool:hutool-all:${hutoolVersion}"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor "com.github.therapi:therapi-runtime-javadoc-scribe:${therapiJavadocVersion}"
        annotationProcessor "io.github.linpeilie:mapstruct-plus-processor:${mapstructPlusVersion}"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructPlusLombokVersion}"

    }
}
